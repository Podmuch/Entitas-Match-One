//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public PressPointComponent pressPoint { get { return (PressPointComponent)GetComponent(InputComponentsLookup.PressPoint); } }
    public bool hasPressPoint { get { return HasComponent(InputComponentsLookup.PressPoint); } }

    public void AddPressPoint(int newX, int newY) {
        var index = InputComponentsLookup.PressPoint;
        var component = CreateComponent<PressPointComponent>(index);
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplacePressPoint(int newX, int newY) {
        var index = InputComponentsLookup.PressPoint;
        var component = CreateComponent<PressPointComponent>(index);
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemovePressPoint() {
        RemoveComponent(InputComponentsLookup.PressPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPressPoint;

    public static Entitas.IMatcher<InputEntity> PressPoint {
        get {
            if (_matcherPressPoint == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PressPoint);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPressPoint = matcher;
            }

            return _matcherPressPoint;
        }
    }
}
